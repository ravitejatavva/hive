unpivoting -- transpose columns into rows of a table
create table unpivot(id string,yes string,no string) row format delimited fields terminated by ',' lines terminated by '\n' stored as textfile;
load data local inpath '/home/cloudera/unpivot' into table unpivot;

hive> select * from unpivot;
OK
bash: n: command not found	NULL	NULL
001	21	11
002 9   89
003	10	90

select id, bool, val from (select id, MAP('yes', yes, 'no', no) as tmp_column from unpivot)x lateral view explode(tmp_column) exp_tbl as bool,val;

hive> select id, bool, val from (select id, MAP('yes', yes, 'no', no) as tmp_column from unpivot)x lateral view explode(tmp_column) exp_tbl as bool,val;
OK

001	yes	21
001	no	11
002	yes	9
002	no	89
003	yes	10
003	no	90


hive> select * from A;
OK
1
1
2
3
4
5

hive> select * from B;
OK
4
5

hive> select t1.* from A t1 left outer join B t2 on t1.id = t2.id where t2.id is NULL;
OK
1
1
2
3

select word_split, count(*) from select explode(split(word,",")) as word_split from occur)word_cnt group by word_split;


SELECT resource_id,
CASE WHEN COLLECT_SET(quarter_1)[0] IS NULL THEN 0 ELSE COLLECT_SET(quarter_1)[0] END AS quarter_1_spends,
CASE WHEN COLLECT_SET(quarter_2)[0] IS NULL THEN 0 ELSE COLLECT_SET(quarter_2)[0] END AS quarter_2_spends,
CASE WHEN COLLECT_SET(quarter_3)[0] IS NULL THEN 0 ELSE COLLECT_SET(quarter_3)[0] END AS quarter_3_spends,
CASE WHEN COLLECT_SET(quarter_4)[0] IS NULL THEN 0 ELSE COLLECT_SET(quarter_4)[0] END AS quarter_4_spends
FROM (
SELECT resource_id,
CASE WHEN quarter='Q1' THEN amount END AS quarter_1,
CASE WHEN quarter='Q2' THEN amount END AS quarter_2,
CASE WHEN quarter='Q3' THEN amount END AS quarter_3,
CASE WHEN quarter='Q4' THEN amount END AS quarter_4
FROM billing_info)tbl1
GROUP BY resource_id;

